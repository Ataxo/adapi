== Adapi

Adapi (shortened "AdWords API") is a library for easy and painless work with
Google Adwords API. Its users shouldn't bother with SOAP and tangle of XML- and
API-specific objects (remember adwords4r gem?), inputs and outputs are plain
Ruby arrays and hashes.

Adapi is built on new Google Adwords API gems: google-ads-common and
google-adwords-api. Arrays and hashes instead of objects come from there, but
adapi takes it several steps further. AdWords services are represented by models
with relations, so among other things it's possible to create whole campaign in
single method call: Adapi::Campaign.create(campaign_data). Various convenience
methods are added to the models, for example: campaign.pause! (pauses
campaign). Adapi enables multiple AdWords accounts to be used at the same time.

Adapi is STILL IN DEVELOPMENT, not nearly done yet! Version 0.1.0 should have
all planned functionality.

== Installation

       gem install adapi

=== from git repository

       bundle install
       rake install

== Configuration of AdWords Account(s)

This section explains how to connect to specific account and client.

In general, you can set many AdWords accounts to connect to (similarly as you
can set up several databases in Rails, for example).

=== Authentication workflow

* load configuration from ~/adapi.yml
* load configuration from ~/adwords_api.yml (default configuration for AdWords gems
  from Google)
* set configuration directly to Adapi::Config (overrides previous settings)

=== Configuration by adapi.yml

Stored in ~/adapi.yml. Supports multiple accounts, which are identifed by
aliases. Example:

      :default:
        :authentication:
          :method: ClientLogin
          :email: default_email@gmail.com
          :password: default_password
          :developer_token: default_token
          :client_email: default_client_email@gmail.com
          :user_agent: My Adwords API Client
        :service:
          :environment: PRODUCTION
      
      :sandbox:
        :authentication:
          :method: ClientLogin
          :email: sandbox_email@gmail.com
          :password: sandbox_password
          :developer_token: sandbox_token
          :client_email: sandbox_client_email@gmail.com
          :user_agent: Adwords API Test
        :service:
          :environment: SANDBOX

You tell adapi which account to use by setting an alias:

      Adapi::Config.set(:sandbox)

:default account is, as name implies, used by default. You must either set an
alias to Adapi::Config or have account with :default alias available.

=== Configuration by adwords_api.yml

If you already have google-adwords-api gem configured and use just one account,
the same configuration will also work for adapi: ~/adwords_api.yml

=== Configuration directly in code

Before logging into the Adwords API, you can set global settings through
Adapi::Config:

      Adapi::Config.set(
        :authentication => {
          :method           => "ClientLogin"
          :email            => "sandbox_email@gmail.com",
          :password         => "sandbox_password",
          :developer_token  => "sandbox_token",
          :client_email     => "sandbox_client_email@gmail.com",
          :user_agent       => "Adwords API Test"
        },
        :service => {
          :environment      => "SANDBOX"
        }
      )

This will override any previous configuration and set the account as :default.
You can specify more accounts this way, with aliases, in the same way as in
~/adapi.yml.

== API

There are two ways of working with API. Both examples show adding an ad to
specific campaign's ad group:

=== Model-centric

       Adapi::Campaign.create(campaign_data)

=== TODO Collection-centric 

       account = Adapi::Account.new(:account_alias)

       campaign = account.campaigns.create(campaign_data)

       account.campaigns[ campaign[:id] ].ad_groups << ad_group_data

== Examples

Example are available in /examples directory. For now, they are mostly just dumb
rewrites of examples from google-adwords-api gem, but that's going to change
when proper UI to AdWords models will be implemented.

== Author

Lukas Stejskal
